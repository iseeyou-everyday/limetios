name: CI
on: [push, pull_request]

env:
  HAXE_VERSION: 4.2.5

jobs:
  android:
    runs-on: ubuntu-20.04
    steps:

      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e

      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 11

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          curl -LO https://github.com/HaxeFoundation/hxcpp/releases/download/v4.3.45/hxcpp-4.3.45.zip
          haxelib install ./hxcpp-4.3.45.zip --quiet
          haxelib install format --quiet
          haxelib install hxp --quiet

      - name: Enable HXCPP compile cache
        run: |
          echo "HXCPP_COMPILE_CACHE=~/.hxcpp" >> $GITHUB_ENV

      - name: Prepare Lime
        run: |
          haxelib dev lime ${{ github.workspace }}
          haxelib run lime setup -alias -y -nocffi -eval

      - name: Configure Android support
        run: |
          lime config ANDROID_SDK $ANDROID_HOME -eval
          lime config ANDROID_NDK_ROOT ${{ steps.setup-ndk.outputs.ndk-path }} -eval
          lime config JAVA_HOME $JAVA_HOME -eval
          lime config ANDROID_SETUP true -eval
          lime config -eval
          
      - name: Rebuild Lime (Android)
        run: |
          lime rebuild android -release -nocolor -verbose -nocffi -eval

      - uses: actions/upload-artifact@v4
        with:
          name: Android-NDLL
          path: |
            ndll/Android/
            !**/.gitignore
          if-no-files-found: error

      - name: Install samples
        run: |
          haxelib git lime-samples https://github.com/openfl/lime-samples --quiet

  package-haxelib:
    needs: android
    runs-on: ubuntu-20.04
    steps:

      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib install hxcpp 4.2.1 --quiet
          haxelib install format --quiet
          haxelib install hxp --quiet
          haxelib install svg --quiet
          haxelib install openfl --quiet

      - name: Enable HXCPP compile cache
        run: |
          echo "HXCPP_COMPILE_CACHE=~/.hxcpp" >> $GITHUB_ENV

      - name: Rebuild Lime tools
        run: |
          haxelib dev lime ${{ github.workspace }}
          haxelib run lime rebuild tools -nocolor -verbose -nocffi
          haxelib run lime setup -alias -y -nocffi
          cp project/lib/hashlink/other/osx/entitlements.xml templates/bin/hl/entitlements.xml
          mkdir templates/bin/hl/include
          cp project/lib/hashlink/src/hlc.h templates/bin/hl/include/hlc.h
          cp project/lib/hashlink/src/hl.h templates/bin/hl/include/hl.h
          cp project/lib/hashlink/src/hlc_main.c templates/bin/hl/include/hlc_main.c

      - uses: actions/download-artifact@v4
        with:
          name: Android-NDLL
          path: ndll/Android/
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: Windows-Hashlink
      #     path: templates/bin/hl/Windows

      - name: Rebuild Lime svg.n
        working-directory: tools
        run: |
          haxe svg.hxml

      - uses: actions/upload-artifact@v4
        with:
          name: lime-haxelib
          path: |
            ./
            !project/
            !haxe-*-*/
            !neko-*-*/
            !.git/
          if-no-files-found: error

  docs:
    runs-on: ubuntu-20.04
    steps:

      - uses: actions/checkout@v3

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Install Haxe dependencies
        run: |
          haxelib install dox --quiet
          haxelib dev lime ${{ github.workspace }}

      - name: Build docs
        working-directory: docs
        run: |
          haxe build.hxml

      - uses: actions/upload-artifact@v3
        with:
          name: lime-docs
          path: docs/pages
          if-no-files-found: error

  notify:
    runs-on: ubuntu-20.04
    needs: [package-haxelib, docs, android]
    if: ${{ github.repository == 'openfl/lime' && github.event_name != 'pull_request' }}
    steps:
      - name: Notify Discord
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
